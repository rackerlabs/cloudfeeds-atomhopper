<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo" xsi:schemaLocation="http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                           http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="amazonAWSCredentials" class="com.amazonaws.auth.BasicAWSCredentials">
        <constructor-arg value="XXXXXXXX" />
        <constructor-arg value="XXXXXXXX" />
    </bean>

   <!--bean id="client" class="com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient">
        <constructor-arg ref="amazonAWSCredentials" />
        <property name="endpoint" value="https://dynamodb.ap-south-1.amazonaws.com" />
    </bean-->

    <bean id="client" class="com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient">
        <constructor-arg ref="amazonAWSCredentials" />
        <property name="endpoint" value="http://db:8000" />
    </bean>

        <!-- DynamoDB service -->
    <!-- Configure from environment variables -->
    <!--bean id="awsCredentials" class="com.amazonaws.auth.BasicAWSCredentials">
        <constructor-arg value="ASIA2R5DFDN5OZQU5RYT" />
        <constructor-arg value="n+p80RfWdzgzJJaW1AXYdDUZEUCdMN3Mucyy0l/u" />
    </bean>
    <bean id="client" class="com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient">
        <constructor-arg ref="awsCredentials" />
    </bean>
    <bean id="region_enum" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass">
            <value>com.amazonaws.regions.Regions</value>
        </property>
        <property name="targetMethod">
            <value>fromName</value>
        </property>
        <property name="arguments">
            <list>
                <value>us-east-1</value>
            </list>
        </property>
    </bean>
    <bean id="region" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass">
            <value>com.amazonaws.regions.Region</value>
        </property>
        <property name="targetMethod">
            <value>getRegion</value>
        </property>
        <property name="arguments">
            <list>
                <ref local="region_enum" />
            </list>
        </property>
    </bean>
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <ref local="client" />
        </property>
        <property name="targetMethod">
            <value>setRegion</value>
        </property>
        <property name="arguments">
            <list>
                <ref local="region" />
            </list>
        </property>
    </bean>
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <ref local="client" />
        </property>
        <property name="targetMethod">
            <value>setEndpoint</value>
        </property>
        <property name="arguments">
            <list>
                <value>http://db:8000</value>
            </list>
        </property>
    </bean-->

    <bean id="dynamodb-feed-publisher" name="dynamodb-feed-publisher" class="org.atomhopper.dynamodb.adapter.DynamoFeedDBPublisher">
        <property name="dynamoDBClient" ref="client"></property>
    </bean>

    <!--bean id="dynamodb-feed-source" name="dynamodb-feed-source" class="org.atomhopper.dynamodb.adapter.DynamoFeedPublisher">
        <property name="dynamoDBClient" ref="client"></property>
    </bean-->

    <bean name="feed-paging-processor" class="org.atomhopper.abdera.filter.FeedPagingProcessor"/>
    <bean name="role-aware-feed-etag-processor" class="org.atomhopper.abdera.filter.HeaderValueFeedEntityTagProcessor">
        <property name="headerName" value="x-roles" />
        <property name="hashETag" value="true"/>
        <property name="headerTagPostfixMap">
            <map>
                <entry key="cloudfeeds:observer" value="observer"/>
            </map>
        </property>
    </bean>
    <bean name="selective-uri-json-filter" class="org.atomhopper.abdera.filter.SelectiveURIJSONFilter">
        <property name="allowedURIs">
            <list>
                <value>/automation/events</value>
                <value>/dedicatedvcloud/events</value>
                <value>/monitoring/events</value>
                <value>/nova/events</value>
                <value>/servers/events</value>
                <value>/support/events</value>
            </list>
        </property>
    </bean>
</beans>