# syntax=docker/dockerfile:1

# FROM maven:3.8.6-amazoncorretto-8
# FROM maven:3.8.6-eclipse-temurin-8-focal
# FROM maven:3.8.6-eclipse-temurin-8-alpine

# FROM maven:3.3-jdk-8 AS builder

#FROM maven:3.8.1-openjdk-11-slim AS builder
###############################################################
# Build cloudfeeds atomhopper using maven container image
###############################################################
FROM maven:3.8.6-openjdk-8-slim AS builder

ARG APP_GIT_REPO="https://github.com/rackerlabs/cloudfeeds-atomhopper.git"
ARG AH_VERSION

LABEL Maintainer="cloudfeeds-core@rackspace.com" \
      description="Docker image for Cloudfeeds Atom-Hopper" \
      NAME="cloudfeeds-atomhopper" \
      Version="${AH_VERSION}"

WORKDIR /cf-ah
COPY ./../pom.xml                              /cf-ah/pom.xml
COPY ./../test-utils/pom.xml                   /cf-ah/test-utils/pom.xml
COPY ./../filters/filter-utils/pom.xml         /cf-ah/filters/filter-utils/pom.xml
COPY ./../filters/xslt-filter/pom.xml          /cf-ah/filters/xslt-filter/pom.xml
COPY ./../filters/tenant-filter/pom.xml        /cf-ah/filters/tenant-filter/pom.xml
COPY ./../filters/external-href-filter/pom.xml /cf-ah/filters/external-href-filter/pom.xml
COPY ./../filters/private-attrs-filter/pom.xml /cf-ah/filters/private-attrs-filter/pom.xml
COPY ./../filters/json-filter/pom.xml          /cf-ah/filters/json-filter/pom.xml
COPY ./../feeds-atomhopper/pom.xml             /cf-ah/feeds-atomhopper/pom.xml

# RUN mvn -e -B dependency:resolve
RUN mvn dependency:go-offline


# Perform health check
#HEALTHCHECK --interval=10s --timeout=3s --start-period=3s --retries=3 \
#      CMD ["curl", "-L", "--fail", "--silent", "--show-error", "--connect-timeout", "3", "--max-time", "3", "http://localhost:8000/v1/"]

#RUN chown 1000:1000 /target
#USER 1000 # javauser
COPY . .
#RUN mvn clean -e -B package
RUN mvn package
#CMD ["/bin/sh", "-c"]


# Multi stage build
# Download artifacts
# FROM curlimages/curl:7.86.0 as curl
FROM alpine:3.17.0 as package

ARG SCHEMA_VERSION
ARG CATALOG_VERSION

RUN apk add --update --no-cache curl tar ca-certificates && \
    curl https://artifacts.rackspace.net/artifactory/cloudfeeds-maven-local/com/rackspace/usage/usage-schema/${SCHEMA_VERSION}/usage-schema-${SCHEMA_VERSION}-schema.tar.gz | tar xz && \
    curl -o /feedscatalog.war https://artifacts.rackspace.net/artifactory/cloudfeeds-maven-local/com/rackspace/feeds/feedscatalog/${CATALOG_VERSION}/feedscatalog-${CATALOG_VERSION}.war


# Prod container
FROM tomcat:9.0.70-jre8-temurin-jammy as tomcat

#FROM adoptopenjdk/openjdk8:alpine-slim

ARG APP_GIT_REPO="https://github.com/rackerlabs/cloudfeeds-atomhopper.git"
ARG AH_VERSION

LABEL Maintainer="cloudfeeds-core@rackspace.com" \
      description="Docker image for Cloudfeeds Atom-Hopper" \
      NAME="cloudfeeds-atomhopper" \
      Version="${AH_VERSION}"

ARG saxon_lic
ARG SCHEMA_VERSION
# ARG ah_version

ENV SAXON_HOME=/etc/saxon \
    #CATALINA_HOME=/opt/tomcat \
    #AH_VERSION=$ah_version \
    APP_CTX_PATH=/etc/atomhopper \
    AH_HOME=/opt/atomhopper \
    PATH=${PATH}:${CATALINA_HOME}/bin:${AH_HOME} \
    # DynamoDB Variables
    DB_ENDPOINT=

# Create execute user
RUN <<EOF 
      groupadd docker
      useradd -g docker -ms /bin/bash feeds

      mkdir -p "${AH_HOME}" "${SAXON_HOME}" "${APP_CTX_PATH}" /var/log/atomhopper/ /etc/cloudfeeds/translation/
      chown -R feeds:docker "${CATALINA_HOME}" "${AH_HOME}" "${SAXON_HOME}" "${APP_CTX_PATH}" /var/log/atomhopper/ /etc/cloudfeeds/translation/
EOF

#USER feeds:docker

WORKDIR ${AH_HOME}

COPY --chown=feeds:docker ./docker/entrypoint_dev.sh .
COPY --chown=feeds:docker ./docker/files/*           "${APP_CTX_PATH}"
COPY --chown=feeds:docker ./docker/feedscatalog.xml  /etc/feedscatalog/
COPY --chown=feeds:docker ./docker/${saxon_lic}      ${SAXON_HOME}/saxon-license.lic

USER feeds:docker
RUN <<EOF
       #!/usr/bin/env sh
       chmod +x ./entrypoint_dev.sh

       mv $APP_CTX_PATH/application-context-dynamodb.xml $APP_CTX_PATH/application-context.xml

       # Replacing Endpoint
       sed -i -e "s@\(<property name=\"endpoint\" value=\"\).*\(\".*\)@\1${DB_ENDPOINT}\2@g" $APP_CTX_PATH/application-context.xml

       # Replacing DynamoDB Configuration
       sed -i "s/\(<publisher reference=\"\).*\(\".*\)/\1dynamodb-feed-publisher\2/g" $APP_CTX_PATH/atom-server.cfg.xml
       sed -i "s/\(<feed-source reference=\"\).*\(\".*\)/\1dynamodb-feed-source\2/g" $APP_CTX_PATH/atom-server.cfg.xml 
EOF


###############################################################
# get ca cert bundle from curl.haxx.se
###############################################################
#RUN curl https://curl.haxx.se/ca/cacert.pem -L -o /cacert.pem


COPY --chown=feeds:docker --from=builder /cf-ah/feeds-atomhopper/target/feeds-atomhopper-1.14.1-SNAPSHOT.war ${CATALINA_HOME}/webapps/ROOT.war

COPY --chown=feeds:docker --from=package /usage-schema-${SCHEMA_VERSION}/xslt-artifacts/* /etc/cloudfeeds/translation/
COPY --chown=feeds:docker --from=package /feedscatalog.war ${CATALINA_HOME}/webapps/feedscatalog.war
# COPY --from=package /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

EXPOSE 8080
###############################################################
# add non privileged curl user
###############################################################
#RUN addgroup -S cf_group && adduser -S cf_user -G cf_group


# Perform health check
HEALTHCHECK --interval=120s --timeout=5s --start-period=7s --retries=3 \
      CMD ["curl", "-L", "--fail", "--silent", "--show-error", "--connect-timeout", "3", "--max-time", "3", "http://localhost:8080/feedscatalog/catalog"]


#Start tomcat server
CMD entrypoint_dev.sh
#CMD ["/bin/sh", "-c", "/usr/local/tomcat/bin/catalina.sh", "run"]

