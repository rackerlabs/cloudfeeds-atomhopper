<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.rackspace.feeds</groupId>
        <artifactId>cloudfeeds-atomhopper</artifactId>
        <relativePath>./../pom.xml</relativePath>
        <version>1.14.1-SNAPSHOT</version>
    </parent>

    <groupId>com.rackspace.feeds</groupId>
    <artifactId>feeds-atomhopper</artifactId>
    <packaging>war</packaging>

    <name>Cloud Feeds Atom Hopper Server App</name>
    <properties>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.atomhopper</groupId>
            <artifactId>atomhopper</artifactId>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>com.rackspace.feeds.filters</groupId>
            <artifactId>tenant-filter</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.rackspace.feeds.filters</groupId>
            <artifactId>xslt-filter</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.rackspace.feeds.filters</groupId>
            <artifactId>external-href-filter</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.rackspace.feeds.filters</groupId>
            <artifactId>private-attrs-filter</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.rackspace.feeds.filters</groupId>
            <artifactId>json-filter</artifactId>
            <type>jar</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                   <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                   <webResources>
                      <resource>
                          <directory>src/main/webapp/META-INF</directory>
                          <includes>
                              <include>pom.properties</include>
                          </includes>
                          <targetPath>META-INF/maven/org.atomhopper/atomhopper</targetPath>
                          <filtering>true</filtering>
                      </resource>
                      <resource>
                          <directory>src/main/webapp/WEB-INF/xslt</directory>
                      </resource>
                   </webResources>
                   <archive>
                       <manifestEntries>
                           <atomhopper>${atomhopper.version}</atomhopper>
                       </manifestEntries>
                   </archive>
                   <overlays>
                        <overlay>
                            <groupId>org.atomhopper</groupId>
                            <artifactId>atomhopper</artifactId>
                            <excludes>
                                <!-- override excluding META-INF by default -->
                                <!-- dont package all the adapters we dont use -->
                                <exclude>WEB-INF/lib/mongo-java-driver-2.7.1.jar</exclude>
                                <exclude>WEB-INF/lib/hibernate-adapter-${atomhopper.version}.jar</exclude>
                                <exclude>WEB-INF/lib/hibernate-c3p0-4.1.3.Final.jar</exclude>
                                <exclude>WEB-INF/lib/hibernate-commons-annotations-4.0.1.Final.jar</exclude>
                                <exclude>WEB-INF/lib/hibernate-core-4.1.3.Final.jar</exclude>
                                <exclude>WEB-INF/lib/hibernate-jpa-2.0-api-1.0.1.Final.jar</exclude>
                                <exclude>WEB-INF/lib/mongodb-adapter-${atomhopper.version}.jar</exclude>
                                <exclude>WEB-INF/lib/mysql-connector-java-5.1.20.jar</exclude>
                                <exclude>WEB-INF/lib/postgres-adapter-${atomhopper.version}.jar</exclude>
                                <exclude>META-INF/maven/org.atomhopper/atomhopper/pom.properties</exclude>
                            </excludes>
                        </overlay>
                    </overlays>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>overlays</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
    <!--
        By default we turn off this plugin to make builds faster - however,
        if you want to build the RPM simply run maven with
        the following option, '-P build-rpm'

        Example: mvn -P build-rpm clean install
    -->
    <profile>
        <id>build-rpm</id>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>rpm-maven-plugin</artifactId>
                    <version>2.1-alpha-1</version>
                    <executions>
                        <execution>
                            <id>Build RPM</id>
                            <goals>
                                <goal>attached-rpm</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <copyright>Apache License, Version 2.0</copyright>
                        <group>Applications/Communications</group>
                        <packager>Rackspace - Cloud feeds Team</packager>
                        <description>Cloud Feeds ATOM Hopper - The ATOMPub Java Server</description>
                        <release>1</release>
                        <obsoletes>
                            <obsolete>atomhopper</obsolete>
                        </obsoletes>
                        <mappings>
                            <mapping>
                                <directory>/etc/atomhopper</directory>
                                <username>tomcat</username>
                                <groupname>tomcat</groupname>
                                <!-- Modify file permissions as needed -->
                                <filemode>644</filemode>
                                <configuration>noreplace</configuration>
                                <directoryIncluded>true</directoryIncluded>
                                <sources>
                                    <source>
                                        <location>target/feeds-atomhopper-${project.parent.version}/WEB-INF/classes/META-INF/atom-server.cfg.xml</location>
                                    </source>
                                </sources>
                            </mapping>
                            <mapping>
                                <directory>/etc/atomhopper</directory>
                                <username>tomcat</username>
                                <groupname>tomcat</groupname>
                                <!-- Modify file permissions as needed -->
                                <filemode>644</filemode>
                                <configuration>noreplace</configuration>
                                <directoryIncluded>true</directoryIncluded>
                                <sources>
                                    <source>
                                        <location>target/feeds-atomhopper-${project.parent.version}/META-INF/application-context.xml</location>
                                    </source>
                                </sources>
                            </mapping>
                            <mapping>
                                <directory>/etc/atomhopper</directory>
                                <username>tomcat</username>
                                <groupname>tomcat</groupname>
                                <!-- Modify file permissions as needed -->
                                <filemode>644</filemode>
                                <configuration>noreplace</configuration>
                                <directoryIncluded>true</directoryIncluded>
                                <sources>
                                    <source>
                                        <location>target/feeds-atomhopper-${project.parent.version}/META-INF/template-logback.xml</location>
                                        <destination>logback.xml</destination>
                                    </source>
                                </sources>
                            </mapping>
                            <mapping>
                                <!--
                                    Use this path for Tomcat6
                                    <directory>/var/lib/tomcat6/webapps/</directory>
                                -->
                                <!--
                                    This path is for our custom Tomcat7 RPM since
                                    an official Tomcat7 RPM doesn't exist yet for CentOS
                                -->
                                <directory>/srv/tomcat/webapps</directory>
                                <username>tomcat</username>
                                <groupname>tomcat</groupname>
                                <!-- Modify file permissions as needed -->
                                <filemode>644</filemode>
                                <directoryIncluded>false</directoryIncluded>
                                <sources>
                                    <source>
                                        <location>target/feeds-atomhopper-${project.parent.version}.war</location>
                                        <!--
                                            If you already have a ROOT.war and wish to keeo it
                                            then remove the following destination completely
                                        -->
                                        <destination>feeds-atomhopper.war</destination>
                                    </source>
                                </sources>
                            </mapping>
                        </mappings>
                        <postinstallScriptlet>
                            <script>touch "/srv/tomcat/webapps/feeds-atomhopper.war"</script>
                        </postinstallScriptlet>
                        <requires>
                            <!--
                                This path is for our custom Tomcat7 RPM since
                                an official Tomcat7 RPM doesn't exist yet for CentOS
                            -->
                            <require>tomcat7</require>
                            <!--
                                You can modify this to use the Oracle Java JDK 1.6 or Open JDK
                                if you want
                             -->
                            <!--
                            <require>jdk</require>
                            -->
                        </requires>
                    </configuration>
                </plugin>
            </plugins>
        </build>
    </profile>
    <profile>
        <id>upload-veracode-static-scan</id>
        <dependencies>
            <dependency>
                <groupId>com.rackspace.api.clients</groupId>
                <artifactId>veracode-client</artifactId>
                <version>1.3</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.groovy.modules.http-builder</groupId>
                <artifactId>http-builder</artifactId>
                <version>0.7</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.5.13</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>4.3</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpmime</artifactId>
                <version>4.5</version>
            </dependency>
        </dependencies>   
        <build>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>gmaven-plugin</artifactId>
                    <version>1.3</version>
                    <executions>
                        <execution>
                            <phase>verify</phase>
                            <goals>
                                <goal>execute</goal>
                            </goals>
                            <configuration>
                                <source>
                                    import com.rackspace.api.clients.veracode.DefaultVeracodeApiClient
                                    import groovy.util.AntBuilder
                                    import groovyx.net.http.HTTPBuilder
                                    import static groovyx.net.http.ContentType.*
                                    import static groovyx.net.http.Method.*

                                    // some globals used throughout the script
                                    def veracodeUrl = 'https://analysiscenter.veracode.com/api/'
                                    def platform = 'Linux'
                                    def client = new DefaultVeracodeApiClient(veracodeUrl, '${veracode.username}', 
                                                                              '${veracode.password}', System.out)
                                    def version = project.parent.version

                                    // scanName is the version (minus -SNAPSHOT) and build number.
                                    // an example would be: 1.11.0-1
                                    def scanName = version - '-SNAPSHOT' + '-' + '${build.number}'
                                    println "Submitting scan for artifacts with name: " + scanName

                                    // get the application ID
                                    // the application must be pre-created from Veracode web UI
                                    def appId =  client.getAppId("Feeds Atom Hopper")
                                    println "For applicationId: " + appId 
                                    println ""

                                    def http = new HTTPBuilder(veracodeUrl)
                                    http.auth.basic '${veracode.username}', '${veracode.password}'

                                    // Step 1 - create a new scan
                                    println "Creating a scan build /api/4.0/createbuild.do" 
                                    def result = http.request(POST) {
                                        uri.path = '4.0/createbuild.do'
                                        uri.query = ['app_id': appId, 'version': scanName, 'platform': platform]
                                        response.success = { resp -&gt;
                                            println 'createbuild.do completed successfully (status=${resp.status}): '
                                            println resp.entity.content.text
                                        }
                                        response.failure = { resp -&gt;
                                            println 'createbuild.do failed (status=${resp.status}), reason:'
                                            println resp.entity.content.text
                                        }
                                    }

                                    // Step 2 - upload the file to scan
                                    // Note: I could not make the MultipartEntity to work with
                                    // HttpBuilder class. So I resorted to calling curl
                                    println "Uploading file ${project.basedir}/target/feeds-atomhopper-${version}.war to /api/4.0/uploadfile.do"
                                    def uploadCurl = ["curl", "--compressed",
                                                      "-u", "${veracode.username}:${veracode.password}",
                                                      "-F", "app_id=${appId}",
                                                      "-F", "file=@${project.basedir}/target/feeds-atomhopper-${version}.war",
                                                      "-F", "save_as=feeds-atomhopper.war",
                                                      "${veracodeUrl}4.0/uploadfile.do"]
                                    def proc = uploadCurl.execute()
                                    Thread.start { System.err &lt;&lt; proc.err }
                                    proc.waitFor() 

                                    // Step 3 - submit the prescan with auto_scan=true
                                    // prescan takes a few minutes, the actual scan will
                                    // be kicked off automatically after prescan is done
                                    println "Submitting /api/4.0/beginprescan.do"
                                    http.request(GET) {
                                        uri.path = '4.0/beginprescan.do'
                                        uri.query = ['app_id': appId, 'auto_scan': true]
                                        response.success = { resp -&gt;
                                            println 'prescan sent successfully (status=${resp.status}):'
                                            println resp.entity.content.text
                                        }
                                        response.failure = { resp -&gt;
                                            println 'prescan failed (status=${resp.status}), reason:'
                                            println resp.entity.content.text
                                        }
                                    }
                                </source>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>
  </profiles>
</project>
